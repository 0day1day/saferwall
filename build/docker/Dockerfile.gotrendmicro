################################
# STEP 1 build executable binary
################################

FROM golang:1.14-alpine AS builder

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# Ca-certificates is required to call HTTPS endpoints.
RUN apk update && apk add --no-cache git ca-certificates tzdata \
    && update-ca-certificates 2>/dev/null || true

WORKDIR $GOPATH/src/saferwall/trendmicro/

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy our go files
COPY . .

# Build the binary.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -a -installsuffix cgo -ldflags '-extldflags "-static"' \
     -o /go/bin/trendmicroscanner pkg/grpc/multiav/trendmicro/server/main.go

############################
# STEP 2 build a small image
############################

FROM saferwall/trendmicro:0.0.2
LABEL maintainer="https://github.com/saferwall"
LABEL version="0.0.1"
LABEL description="gRPC server over linux version of TrendMicro"

# Vars
ENV TREND_MICRO_DB_UPDATE_DATE    /av_db_update_date.txt

# Start the service
RUN /etc/init.d/splx start

# Launch an update.
RUN cd /opt/TrendMicro/SProtectLinux/SPLX.vsapiapp \
    && ./splxmain -u \
    && echo -n "$(date +%s)" >> $TREND_MICRO_DB_UPDATE_DATE

# Copy our static executable.
COPY --from=builder /go/bin/trendmicroscanner /bin/trendmicroscanner.

# Install requirements.
RUN yum install -y sudo

# Create an app user so our program doesn't run as root.
RUN groupadd -r saferwall \
    && useradd --no-log-init -r -g saferwall saferwall

# Update permissions
RUN usermod -u 101 saferwall \
	&& groupmod -g 102 saferwall
RUN usermod -aG wheel saferwall \
	&& echo 'saferwall    ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Switch to our user
USER saferwall

ENTRYPOINT ["/bin/trendmicroscanner"]
