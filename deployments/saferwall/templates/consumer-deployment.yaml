{{- if .Values.consumer.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "saferwall.consumer.fullname" . }}
  labels:
    app: {{ include "saferwall.consumer.fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ include "saferwall.consumer.fullname" . }}
  replicas:  {{ .Values.consumer.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "saferwall.consumer.fullname" . }}
    spec:
      {{ if not (eq .Values.global.deployEnv "local") }}
      imagePullSecrets:
        - name: regcred
      {{- end }}
      containers:
        - name: "{{ .Values.consumer.name }}"
          image: "{{ .Values.consumer.image.repository }}:{{ .Values.consumer.image.tag }}"
          {{ if eq .Values.global.deployEnv "local" }}
          imagePullPolicy: Never
          {{ else }}
          imagePullPolicy: "{{ .Values.backend.image.pullPolicy }}"
          {{- end }}
          volumeMounts:
          - name: samples
            mountPath: /samples
          - name:  {{ $.Release.Name }}-consumer-configmap-volume
            mountPath: /consumer/configs/
          env:
            - name: ENVIRONMENT
              value: "prod"
      volumes:
      - name: samples
        persistentVolumeClaim:
          claimName: {{ include "saferwall.fullname" . }}-samples
      - name: {{ $.Release.Name }}-consumer-configmap-volume
        configMap:
          name: {{ include "saferwall.consumer.fullname" . }}
          items:
            - key: consumer_conf
              path: saferwall.prod.toml
{{- end }}
