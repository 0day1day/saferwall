########### MINIO ###########
minio:
  enabled: true

  # We choose distributed for HA. This can be set to standalone in dev env.
  mode: standalone
  # mode: distributed

  # Number of nodes (applicable only for MinIO distributed mode)
  # Should be a minimum value of 4.
  # replicas: 1

  service:
    type: ClusterIP
    port: 9000

  persistence:
    # Use persistent volume to store data
    enabled: true

    # Size of persistent volume claim
    size: 1Gi

  accessKey: "<accessKey>"
  secretKey: "<secretKey>"
  spacename: samples

####### COUCHBASE #########
couchbase-cluster:
  enabled: true
  couchbaseCluster:
    create: true
    name: ""
    username: "Administrator"
    password: "password"
    authSecretOverride: ""
    baseImage: "couchbase/server"
    version: "enterprise-6.0.1"
    exposeAdminConsole: true
    adminConsoleServices:
      - data
    exposedFeatures:
      - xdcr
    adminConsoleServiceType: NodePort
    exposedFeatureServiceType: NodePort
    # dns:
    #   domain:
    platform:
    cluster:
      dataServiceMemoryQuota: 512
      indexServiceMemoryQuota: 512
      searchServiceMemoryQuota: 512
      eventingServiceMemoryQuota: 512
      analyticsServiceMemoryQuota: 1024
      indexStorageSetting: memory_optimized
      autoFailoverTimeout: 120
      autoFailoverMaxCount: 3
      autoFailoverOnDataDiskIssues: true
      autoFailoverOnDataDiskIssuesTimePeriod: 120
      autoFailoverServerGroup: false
      logRetentionTime: 604800s
      logRetentionCount: 20
    buckets:
      files:
        name: files
        type: couchbase
        memoryQuota: 128
        replicas: 1
        ioPriority: high
        evictionPolicy: fullEviction
        conflictResolution: seqno
        enableFlush: true
        enableIndexReplica: false
      users:
        name: users
        type: couchbase
        memoryQuota: 128
        replicas: 1
        ioPriority: high
        evictionPolicy: fullEviction
        conflictResolution: seqno
        enableFlush: true
        enableIndexReplica: false
    servers:
      all_services:
        size: 3
        services:
          - data
          - index
          - query
          - search
          - eventing
          - analytics
        serverGroups: []
        pod:
          volumeMounts:
            default: couchbase
            data:  couchbase
    securityContext:
      fsGroup: 1000
    volumeClaimTemplates:
      - metadata:
          name: couchbase
        spec:
          storageClassName: "default"
          resources:
            requests:
              storage: 1Gi

########### NSQ ###########
nsq:
  nsqd:
    name: nsqd
    replicaCount: 2
  nsqlookupd:
    name: nsqlookupd
    replicaCount: 2

########### EFS-PROVISONNER ###########
efs-provisioner:
  efsProvisioner:
    efsFileSystemId: "fs-d9f9ca58"
    awsRegion: "us-east-1"
    provisionerName: "saferwall.com/aws-efs"
    # dnsName: "fs-36d586b7.efs.us-east-1.amazonaws.com"
    # storageClass:
    #   name:  {{ include "saferwall.fullname" . }}-efs

########### BACKEND ###########
backend:
  enabled: true
  name: backend
  replicaCount: 1
  containerPort: 8080
  image:
    repository: saferwall/backend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080

########### FRONTEND ###########
frontend:
  enabled: true
  name: frontend
  replicaCount: 1
  containerPort: 80
  image:
    repository: saferwall/ui
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
    targetPort: 80

########## CERT-MANAGER ############
cert-manager:
  enabled: true
  ingressShim:
    defaultIssuerName: letsencrypt-prod
    defaultIssuerKind: ClusterIssuer

########## CERTIFICATE ############
backendDomainName: api.saferwall.com
frontendDomainName: saferwall.com
ingressClass: nginx
certEmail: admin@saferwall.com
certIssuer: letsencrypt-prod
certSecret: <certSecretHere>
letsencryptServer: https://acme-v02.api.letsencrypt.org/directory
# letsencryptServer: https://acme-staging-v02.api.letsencrypt.org/directory

########### CONSUMER ###########
consumer:
  enabled: true
  name: consumer
  replicaCount: 1
  image:
    repository: saferwall/consumer
    tag: latest
    pullPolicy: Always

########### MULTIAV ###########
multiav:
  enabled: true
  name: multiav
  vendors:
    avast:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goavast
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    avira:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goavira
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    bitdefender:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gobitdefender
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    clamav:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goclamav
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    comodo:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gocomodo
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    eset:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goeset
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    fsecure:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gofsecure
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    kaspersky:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gokaspersky
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    mcafee:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gomcafee
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    sophos:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gosophos
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    symantec:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gosymantec
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    windefender:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gowindefender
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
