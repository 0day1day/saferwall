# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

defaults: &defaults
  docker:
    - image: circleci/golang:1.11
  working_directory: /go/src/github.com/saferwall/saferwall
  
jobs:
  clone_and_hash:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Determine which packages need to be built"
          command: |
            chmod +x scripts/commit_check.sh
            ./scripts/commit_check.sh

      - persist_to_workspace:
          root: /tmp/saferwall
          paths:
            - circleci/*

  multiav_avast:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install Avast AV"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh avast

      - run:
          name: "Test Avast go pkg"
          command: |
            sh ./scripts/test_multiav.sh avast

  multiav_avira:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install Avira AV"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh avira

      - run:
          name: "Test Avira go pkg"
          command: |
            sudo sh ./scripts/test_multiav.sh avira

  multiav_bitdefender:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install Bitdefender AV"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh bitdefender

      - run:
          name: "Test Bitdefender go pkg"
          command: |
            sh ./scripts/test_multiav.sh bitdefender

  multiav_clamav:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install ClamAV"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh clamav

      - run:
          name: "Test ClamAV go pkg"
          command: |
            sh ./scripts/test_multiav.sh clamav

  multiav_comodo:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install COMODO"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh comodo

      - run:
          name: "Test COMODO go pkg"
          command: |
            sh ./scripts/test_multiav.sh comodo

  multiav_eset:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install ESET"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh eset

      - run:
          name: "Test ESET go pkg"
          command: |
            sh ./scripts/test_multiav.sh eset

  multiav_fsecure:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install FSecure"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh fsecure

      - run:
          name: "Test FSecure go pkg"
          command: |
            sh ./scripts/test_multiav.sh fsecure

  multiav_kaspersky:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install Kaspersky"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh kaspersky

      - run:
          name: "Test Kaspersky go pkg"
          command: |
            sh ./scripts/test_multiav.sh kaspersky
  
  multiav_mcafee:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install McAfee"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh mcafee

      - run:
          name: "Test mcafee go pkg"
          command: |
            sudo sh ./scripts/test_multiav.sh mcafee

  multiav_sophos:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install Sophos"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh sophos

      - run:
          name: "Test Sophos go pkg"
          command: |
            sh ./scripts/test_multiav.sh sophos

  multiav_symantec:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install Symantec"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh symantec

      - run:
          name: "Test Symantec go pkg"
          command: |
            sudo sh ./scripts/test_multiav.sh symantec

  multiav_windows_defender:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/saferwall

      - run:
          name: "Install windefender"
          command: |
            sudo --preserve-env sh ./scripts/build_multiav.sh windefender

      - run:
          name: "Test windefender go pkg"
          command: |
            sudo sh ./scripts/test_multiav.sh windefender

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - clone_and_hash
      - multiav_avast:
          requires:
            - clone_and_hash
      - multiav_avira:
          requires:
            - clone_and_hash
      - multiav_bitdefender:
          requires:
            - clone_and_hash
      - multiav_clamav:
          requires:
            - clone_and_hash
      - multiav_comodo:
          requires:
            - clone_and_hash
      - multiav_eset:
          requires:
            - clone_and_hash
      - multiav_fsecure:
          requires:
            - clone_and_hash
      - multiav_kaspersky:
          requires:
            - clone_and_hash
      - multiav_mcafee:
          requires:
            - clone_and_hash
      - multiav_sophos:
          requires:
            - clone_and_hash
      - multiav_symantec:
          requires:
            - clone_and_hash
      - multiav_windows_defender:
          requires:
            - clone_and_hash
